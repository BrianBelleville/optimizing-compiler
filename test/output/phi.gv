digraph Computation {
node [shape=box];
IfTest -> b_1;
b_1 [label="b_1\l1: call InputNum\l3: add (1) #2\l5: cmp (1) #0\l8: ble b_3\l"]
b_1 -> b_2;
b_2 [label="b_2\l9: bra b_4\l"]
b_2 -> b_4;
b_4 [label="b_4\l7: phi (11) (3) \"z\"\l13: call OutputNum (7)\l14: ret \l"]
b_4 -> b_1[color="green"];
b_2 -> b_1[color="green"];
b_1 -> b_3;
b_3 [label="b_3\l11: add (3) #2\l"]
b_3 -> b_4;
b_3 -> b_1[color="green"];
WhileTest -> b_5;
b_5 [label="b_5\l15: call InputNum\l17: add (15) #2\l"]
b_5 -> b_6;
b_6 [label="b_6\l28: phi (15) (26) \"x\"\l23: phi (17) (24) \"z\"\l20: cmp (28) #4\l21: ble b_8\l"]
b_6 -> b_7;
b_7 [label="b_7\l24: add (17) #8\l26: add (28) #1\l29: bra b_6\l"]
b_7 -> b_6;
b_7 -> b_6[color="green"];
b_6 -> b_8;
b_8 [label="b_8\l30: call OutputNum (23)\l31: ret \l"]
b_8 -> b_6[color="green"];
b_6 -> b_5[color="green"];
__MAIN__ -> b_9;
b_9 [label="b_9\l32: call IfTest\l33: call WhileTest\l34: end\l"]
}