digraph Computation {
node [shape=box];
foo -> b_1;
b_1 [label="b_1\l"]
b_1 -> b_2;
b_2 [label="b_2\l20: phi #0 (19) \"i\"\l18: phi var_d (17) \"d\"\l1: cmp (20) #10\l2: bge b_4\l"]
b_2 -> b_3;
b_3 [label="b_3\l3: adda GBP var_y_addr\l4: load (3)\l5: add (4) #2\l6: adda GBP var_y_addr\l7: store (6) (5)\l8: adda GBP var_x_addr\l9: load (8)\l10: add (9) #2\l11: adda GBP var_z_addr\l12: store (11) (10)\l13: adda GBP var_y_addr\l14: load (13)\l15: adda GBP var_z_addr\l16: load (15)\l17: add (14) (16)\l19: add (20) #1\l21: bra b_2\l"]
b_3 -> b_2;
b_3 -> b_2[color="green"];
b_2 -> b_4;
b_4 [label="b_4\l22: ret (18)\l"]
b_4 -> b_2[color="green"];
b_2 -> b_1[color="green"];
bar -> b_5;
b_5 [label="b_5\l"]
b_5 -> b_6;
b_6 [label="b_6\l36: phi #0 (35) \"i\"\l32: phi #0 (30) \"j\"\l23: cmp (36) #4\l24: bge b_8\l"]
b_6 -> b_7;
b_7 [label="b_7\l"]
b_7 -> b_9;
b_9 [label="b_9\l30: phi (32) (29) \"j\"\l25: cmp (30) #4\l26: bge b_11\l"]
b_9 -> b_10;
b_10 [label="b_10\l53: mul (36) #16\l54: mul (30) #4\l55: add (53) (54)\l56: add array_b_addr (55)\l57: adda GBP (56)\l28: store (57) (30)\l29: add (30) #1\l31: bra b_9\l"]
b_10 -> b_9;
b_10 -> b_9[color="green"];
b_9 -> b_11;
b_11 [label="b_11\l58: mul (36) #4\l59: add array_a_addr (58)\l60: adda GBP (59)\l34: store (60) (36)\l35: add (36) #1\l37: bra b_6\l"]
b_11 -> b_6;
b_11 -> b_9[color="green"];
b_9 -> b_7[color="green"];
b_7 -> b_6[color="green"];
b_6 -> b_8;
b_8 [label="b_8\l38: ret \l"]
b_8 -> b_6[color="green"];
b_6 -> b_5[color="green"];
__MAIN__ -> b_12;
b_12 [label="b_12\l39: adda GBP var_x_addr\l40: store (39) #0\l41: adda GBP var_y_addr\l42: store (41) #0\l43: adda GBP var_z_addr\l44: store (43) #0\l45: adda GBP var_x_addr\l46: load (45)\l47: adda GBP var_z_addr\l48: load (47)\l49: call bar (46) (48)\l50: call foo\l51: call OutputNum (50)\l52: end\l"]
}