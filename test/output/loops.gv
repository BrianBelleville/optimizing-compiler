digraph Computation {
node [shape=box];
test1 -> b_1;
b_1 [label="b_1\l1: call InputNum\l2: call InputNum\l3: add (1) (2)\l"]
b_1 -> b_2;
b_2 [label="b_2\l12: phi (2) (11) \"x\"\l4: cmp (3) (2)\l5: bge b_4\l"]
b_2 -> b_3;
b_3 [label="b_3\l"]
b_3 -> b_5;
b_5 [label="b_5\l6: cmp (2) (1)\l7: bge b_7\l"]
b_5 -> b_6;
b_6 [label="b_6\l8: call foo (3) (2) (12)\l9: call foo (12) (12) (12)\l10: bra b_5\l"]
b_6 -> b_5;
b_6 -> b_5[color="green"];
b_5 -> b_7;
b_7 [label="b_7\l11: call InputNum\l13: bra b_2\l"]
b_7 -> b_2;
b_7 -> b_5[color="green"];
b_5 -> b_3[color="green"];
b_3 -> b_2[color="green"];
b_2 -> b_4;
b_4 [label="b_4\l14: call OutputNum (12)\l"]
b_4 -> b_2[color="green"];
b_2 -> b_1[color="green"];
constantsTest -> b_8;
b_8 [label="b_8\l"]
b_8 -> b_9;
b_9 [label="b_9\l27: phi #1 (26) \"w\"\l15: cmp (27) #0\l16: ble b_11\l"]
b_9 -> b_10;
b_10 [label="b_10\l17: add (27) #2\l18: add (17) #3\l19: add (18) #4\l20: call OutputNum (19)\l34: mul (27) #256\l35: add (34) #192\l36: add array_a_addr (35)\l37: adda FP (36)\l22: store (37) #64\l38: mul (27) #256\l39: add (38) #192\l40: add array_a_addr (39)\l41: adda FP (40)\l24: load (41)\l25: call OutputNum (24)\l26: call InputNum\l28: bra b_9\l"]
b_10 -> b_9;
b_10 -> b_9[color="green"];
b_9 -> b_11;
b_11 [label="b_11\l"]
b_11 -> b_9[color="green"];
b_9 -> b_8[color="green"];
foo -> b_12;
b_12 [label="b_12\l29: call OutputNum arg_x\l30: call OutputNum arg_y\l31: call OutputNum arg_z\l"]
__MAIN__ -> b_13;
b_13 [label="b_13\l32: call test1\l33: call constantsTest\l"]
}