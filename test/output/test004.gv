digraph Computation {
node [shape=box];
max -> b_1;
b_1 [label="b_1\l1: add array_arg_addr #4\l2: adda FP (1)\l3: store (2) arg_a1\l4: add array_arg_addr #8\l5: adda FP (4)\l6: store (5) arg_a2\l7: add array_arg_addr #12\l8: adda FP (7)\l9: store (8) arg_a3\l10: add array_arg_addr #16\l11: adda FP (10)\l12: store (11) arg_a4\l13: add array_arg_addr #20\l14: adda FP (13)\l15: store (14) arg_a5\l16: add array_arg_addr #4\l17: adda FP (16)\l18: load (17)\l"]
b_1 -> b_2;
b_2 [label="b_2\l34: phi #2 (33) \"i\"\l32: phi (18) (30) \"temp\"\l19: cmp (34) #5\l20: bgt b_4\l"]
b_2 -> b_3;
b_3 [label="b_3\l21: mul (34) #4\l22: add array_arg_addr (21)\l23: adda FP (22)\l24: load (23)\l25: cmp (24) (32)\l31: ble b_7\l"]
b_3 -> b_5;
b_5 [label="b_5\l26: mul (34) #4\l27: add array_arg_addr (26)\l28: adda FP (27)\l29: load (28)\l"]
b_5 -> b_7;
b_7 [label="b_7\l30: phi (32) (29) \"temp\"\l33: add (34) #1\l35: bra b_2\l"]
b_7 -> b_2;
b_7 -> b_3[color="green"];
b_5 -> b_3[color="green"];
b_3 -> b_7;
b_3 -> b_2[color="green"];
b_2 -> b_4;
b_4 [label="b_4\l36: ret (32)\l"]
b_4 -> b_2[color="green"];
b_2 -> b_1[color="green"];
__MAIN__ -> b_8;
b_8 [label="b_8\l37: add array_input_addr #4\l38: adda FP (37)\l39: store (38) #22\l40: add array_input_addr #8\l41: adda FP (40)\l42: store (41) #61\l43: add array_input_addr #12\l44: adda FP (43)\l45: store (44) #17\l46: add array_input_addr #16\l47: adda FP (46)\l48: store (47) #34\l49: add array_input_addr #20\l50: adda FP (49)\l51: store (50) #11\l52: add array_input_addr #4\l53: adda FP (52)\l54: load (53)\l55: add array_input_addr #8\l56: adda FP (55)\l57: load (56)\l58: add array_input_addr #12\l59: adda FP (58)\l60: load (59)\l61: add array_input_addr #16\l62: adda FP (61)\l63: load (62)\l64: call max (54) (57) (60) (63)\l"]
}