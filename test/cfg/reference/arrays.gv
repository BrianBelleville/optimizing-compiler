digraph Computation {
node [shape=box];
arrayTest -> b_1;
b_1 [label="b_1\l1: fetch x\l2: fetch y\l3: fetch z\l4: adda GBP #-4\l5: store (4) #4\l47: adda FP #4\l7: load (47)\l48: adda FP #404\l10: load (48)\l49: adda FP #20\l13: load (49)\l50: adda FP #448\l16: load (50)\l51: adda FP #944\l19: load (51)\l52: mul (1) #16\l53: mul (2) #4\l54: add (52) (53)\l55: add (54) #436\l56: adda FP (55)\l22: load (56)\l57: mul (3) #4\l58: add (57) #1028\l59: adda FP (58)\l25: load (59)\l60: mul (1) #4\l61: add #-404 (60)\l62: adda GBP (61)\l28: store (62) (2)\l29: add (1) (2)\l63: mul (1) #32\l64: mul (2) #16\l65: add (63) (64)\l66: mul (3) #8\l67: add (65) (66)\l68: mul (1) #4\l69: add (67) (68)\l70: add #-468 (69)\l71: adda GBP (70)\l31: store (71) (29)\l32: add (1) (1)\l72: mul (1) #120\l73: mul (1) #24\l74: add (72) (73)\l75: mul (1) #4\l76: add (74) (75)\l77: add #-948 (76)\l78: adda GBP (77)\l34: store (78) (32)\l35: ret \l"]
__MAIN__ -> b_2;
b_2 [label="b_2\l36: adda GBP #-4\l37: load (36)\l79: adda FP #44\l40: load (79)\l80: mul (40) #24\l81: add (80) #-572\l82: adda GBP (81)\l43: load (82)\l45: call arrayTest #1 #1 #1\l46: end\l"]
}