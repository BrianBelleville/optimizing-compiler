# Brian Belleville 2014

main

procedure test1;
var w, x, y, z;
{

  let y <- call InputNum();
  let z <- call InputNum();
  let w <- y + z;
  let x <- z;
  while w < z do
    while z < y do
      # during initial parse, x and z are equal to the same value, but
      # should not both be replaced with a phi, and only the 'x'
      # should be replaced with the phi for x
      call foo(w, z, x);
      # all instances of x should be replaced with a phi
      call foo(x, x, x)	
    od;
    let x <- call InputNum()	# generate a phi for x
  od;
  call OutputNum(y)    
};

procedure constantsTest;
var w, x, y, z;
array[4][4][4][4] a;
{
  let w <- 1;
  let x <- 2;
  let y <- 3;
  let z <- 4;
  while w > 0 do
    # initally, all constant values, so compiler may think it can
    # compute at compile time
    call OutputNum(w + x + y + z);
    let a[w][x][y][z] <- 64;
    call OutputNum(a[w][x][y][z]);
    let w <- call InputNum
  od
};

procedure foo(x, y, z);
{
  call OutputNum(x);
  call OutputNum(y);
  call OutputNum(z)
};

{
  call test1
}.
